# =================================================================
# AUTOCLEAN CONFIGURATION FILE
# This file controls how EEG data is automatically processed and cleaned
# =================================================================

# TASK CONFIGURATION
# Each task represents a different type of EEG recording (e.g., resting state, specific experiments)
tasks:
  # RESTING STATE TASK (Eyes Open)
  resting_eyesopen_grael4k:
    mne_task: "rest"
    description: "Resting state with eyes open"
    lossless_config: configs/pylossless/lossless_config_spg.yaml    # Points to additional configuration settings
    settings:
      # PROCESSING STEPS
      # Each step can be enabled/disabled and has specific settings
      
      resample_step:
        enabled: true        # Set to false to skip this step
        value: 250          # New sampling rate in Hz
      
      drop_outerlayer:
        enabled: false
        value: []

      eog_step:
        enabled: true
        value: [31, 32]  # Channel numbers for eye movement detection
      
      trim_step:
        enabled: true
        value: 4            # Number of seconds to trim from start/end
      
      crop_step:
        enabled: false
        value:
          start: 0          # Start time in seconds
          end: 60         # null means use entire recording, or specify time in seconds (e.g., 30.0)
      
      reference_step:
        enabled: false
        value: "average"    # Type of EEG reference to use
      
      montage:
        enabled: true
        value: "standard_1020"  # Type of EEG cap/electrode layout
      epoch_settings:
        enabled: true     
        value:
          tmin: -1
          tmax: 1
        event_id: null      # null means no triggers/events to use (disabled)
        remove_baseline:
          enabled: false
          window: [null, 0]
        threshold_rejection:
          enabled: false
          volt_threshold: 
            eeg: 150e-6
    # ARTIFACT REJECTION SETTINGS
    rejection_policy:
      ch_flags_to_reject: ["noisy", "uncorrelated"]  # Types of bad channels to reject
      ch_cleaning_mode: "interpolate"                           # How to handle bad channels
      interpolate_bads_kwargs:
        method: "spline"                                    # Method for interpolating bad channels
      ic_flags_to_reject: ["muscle", "heart", "eog", "ch_noise", "line_noise"]  # Types of components to reject
      ic_rejection_threshold: 0.3                              # Threshold for component rejection
      remove_flagged_ics: true          # Whether to remove marked components                         

# OUTPUT FILE CONFIGURATION
# Controls which processing stages save intermediate files
# Useful for quality checking and troubleshooting
stage_files:
  post_import:
    enabled: false          # Set to true to save file after this stage
    suffix: "_postimport"  # This text will be added to the filename
  post_prepipeline:
    enabled: false
    suffix: "_postprepipeline"
  post_resample:
    enabled: false
    suffix: "_postresample"
  post_outerlayer:
    enabled: false
    suffix: "_postouterlayer"
  post_reference:
    enabled: false
    suffix: "_postreference"
  post_trim:
    enabled: false
    suffix: "_posttrim"
  post_crop:
    enabled: false
    suffix: "_postcrop"
  post_bad_channels:
    enabled: false
    suffix: "_postbadchannels"
  post_pylossless:
    enabled: false
    suffix: "_postpylossless"
  post_rejection_policy:
    enabled: true
    suffix: "_postrejection"
  post_source_localization:
    enabled: false
    suffix: "_stc"
  post_clean_raw:
    enabled: true
    suffix: "_postcleanraw"
  post_epochs:
    enabled: false
    suffix: "_postepochs"
  post_drop_bad_epochs:
    enabled: true
    suffix: "_postdropbadepochs"

  post_gfp_clean:
    enabled: false
    suffix: "_postgfpclean"

  post_comp:
    enabled: true
    suffix: "_postcomp"
  post_autoreject:
    enabled: false
    suffix: "_postautoreject"
  post_edit:
    enabled: true
    suffix: "_postedit"


